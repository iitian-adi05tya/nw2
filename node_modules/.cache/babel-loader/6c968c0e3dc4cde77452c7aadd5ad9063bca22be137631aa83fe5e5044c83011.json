{"ast":null,"code":"var _jsxFileName = \"/Users/iitianaditya/nw/src/components/LandingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingPage = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // 1. Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: true\n    });\n\n    // Set the renderer size and background color to white\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1); // Set the background color to white\n\n    // Append the canvas to the body\n    document.body.appendChild(renderer.domElement);\n\n    // Set a height greater than the viewport to allow scrolling\n    document.body.style.height = \"500vh\"; // 5 times the height of the viewport\n\n    // 2. Lighting\n    const light = new THREE.AmbientLight(0xffffff, 1.5); // Ambient light\n    scene.add(light);\n\n    // Add a directional light to illuminate the model better\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5).normalize();\n    scene.add(directionalLight);\n\n    // 3. Load GLTF Model\n    const loader = new GLTFLoader();\n    let propeller = null;\n    loader.load('./a.glb', gltf => {\n      propeller = gltf.scene;\n      scene.add(propeller);\n\n      // Scale and position the propeller for visibility\n      propeller.scale.set(10, 10, 10); // Make it larger (adjust as needed)\n\n      // Place the propeller in front of the camera, focus on one blade\n      propeller.position.set(0, 0, 0); // Place it at the center of the scene\n\n      // Rotate the propeller to make it vertical and facing the camera\n      propeller.rotation.x = Math.PI / 2; // Rotate 90 degrees along the X axis\n      propeller.rotation.y = 0; // Reset any rotation on the Y axis\n\n      console.log(\"Model loaded successfully!\");\n    }, undefined, error => {\n      console.error(\"Error loading GLTF model:\", error);\n    });\n\n    // 4. Add OrbitControls to make the scene interactive\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.screenSpacePanning = false;\n    controls.maxPolarAngle = Math.PI / 2; // Prevent the user from rotating upside down\n    controls.enableZoom = true;\n\n    // 5. Scroll effect\n    let scrollFactor = 0;\n    const handleScroll = () => {\n      scrollFactor = window.scrollY / window.innerHeight; // Normalize scroll value\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // 6. Animate the model on scroll\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Zoom effect based on scroll (camera zoom in/out)\n      const zoomFactor = 5 + scrollFactor * 20; // Zoom range, adjust as needed\n      camera.position.z = zoomFactor;\n\n      // Move the propeller and rotate it based on scroll\n      if (propeller) {\n        // Adjust the rotation and position based on scroll\n        propeller.rotation.y += 0.01 + scrollFactor * 0.05; // Rotate the propeller blades\n        propeller.position.x = scrollFactor * 5; // Move the propeller to the side as you scroll\n        propeller.position.y = -scrollFactor * 1; // Move it slightly downward\n      }\n\n      // Update OrbitControls\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n};\n_s(LandingPage, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","LandingPage","_s","canvasRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","current","antialias","setSize","setClearColor","document","body","appendChild","domElement","style","height","light","AmbientLight","add","directionalLight","DirectionalLight","position","set","normalize","loader","propeller","load","gltf","scale","rotation","x","Math","PI","y","console","log","undefined","error","controls","enableDamping","dampingFactor","screenSpacePanning","maxPolarAngle","enableZoom","scrollFactor","handleScroll","scrollY","addEventListener","animate","requestAnimationFrame","zoomFactor","z","update","render","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iitianaditya/nw/src/components/LandingPage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nconst LandingPage = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    // 1. Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current, antialias: true });\n\n    // Set the renderer size and background color to white\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 1);  // Set the background color to white\n\n    // Append the canvas to the body\n    document.body.appendChild(renderer.domElement);\n\n    // Set a height greater than the viewport to allow scrolling\n    document.body.style.height = \"500vh\"; // 5 times the height of the viewport\n\n    // 2. Lighting\n    const light = new THREE.AmbientLight(0xffffff, 1.5);  // Ambient light\n    scene.add(light);\n\n    // Add a directional light to illuminate the model better\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5).normalize();\n    scene.add(directionalLight);\n\n    // 3. Load GLTF Model\n    const loader = new GLTFLoader();\n    let propeller = null;\n\n    loader.load('./a.glb', (gltf) => {\n      propeller = gltf.scene;\n      scene.add(propeller);\n\n      // Scale and position the propeller for visibility\n      propeller.scale.set(10, 10, 10);  // Make it larger (adjust as needed)\n      \n      // Place the propeller in front of the camera, focus on one blade\n      propeller.position.set(0, 0, 0);  // Place it at the center of the scene\n\n      // Rotate the propeller to make it vertical and facing the camera\n      propeller.rotation.x = Math.PI / 2; // Rotate 90 degrees along the X axis\n      propeller.rotation.y = 0;  // Reset any rotation on the Y axis\n\n      console.log(\"Model loaded successfully!\");\n    }, undefined, (error) => {\n      console.error(\"Error loading GLTF model:\", error);\n    });\n\n    // 4. Add OrbitControls to make the scene interactive\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.screenSpacePanning = false;\n    controls.maxPolarAngle = Math.PI / 2; // Prevent the user from rotating upside down\n    controls.enableZoom = true;\n\n    // 5. Scroll effect\n    let scrollFactor = 0;\n    \n    const handleScroll = () => {\n      scrollFactor = window.scrollY / window.innerHeight;  // Normalize scroll value\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    // 6. Animate the model on scroll\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Zoom effect based on scroll (camera zoom in/out)\n      const zoomFactor = 5 + scrollFactor * 20;  // Zoom range, adjust as needed\n      camera.position.z = zoomFactor;\n\n      // Move the propeller and rotate it based on scroll\n      if (propeller) {\n        // Adjust the rotation and position based on scroll\n        propeller.rotation.y += 0.01 + scrollFactor * 0.05;  // Rotate the propeller blades\n        propeller.position.x = scrollFactor * 5;  // Move the propeller to the side as you scroll\n        propeller.position.y = -scrollFactor * 1;  // Move it slightly downward\n      }\n\n      // Update OrbitControls\n      controls.update();\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Cleanup event listener on component unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default LandingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,aAAa,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAG,IAAIR,KAAK,CAACS,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIV,KAAK,CAACW,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIf,KAAK,CAACgB,aAAa,CAAC;MAAEC,MAAM,EAAEV,SAAS,CAACW,OAAO;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;;IAExF;IACAJ,QAAQ,CAACK,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDC,QAAQ,CAACM,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAE;;IAEtC;IACAC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACT,QAAQ,CAACU,UAAU,CAAC;;IAE9C;IACAH,QAAQ,CAACC,IAAI,CAACG,KAAK,CAACC,MAAM,GAAG,OAAO,CAAC,CAAC;;IAEtC;IACA,MAAMC,KAAK,GAAG,IAAI5B,KAAK,CAAC6B,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAE;IACtDrB,KAAK,CAACsB,GAAG,CAACF,KAAK,CAAC;;IAEhB;IACA,MAAMG,gBAAgB,GAAG,IAAI/B,KAAK,CAACgC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChED,gBAAgB,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;IAClD3B,KAAK,CAACsB,GAAG,CAACC,gBAAgB,CAAC;;IAE3B;IACA,MAAMK,MAAM,GAAG,IAAInC,UAAU,CAAC,CAAC;IAC/B,IAAIoC,SAAS,GAAG,IAAI;IAEpBD,MAAM,CAACE,IAAI,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC/BF,SAAS,GAAGE,IAAI,CAAC/B,KAAK;MACtBA,KAAK,CAACsB,GAAG,CAACO,SAAS,CAAC;;MAEpB;MACAA,SAAS,CAACG,KAAK,CAACN,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAE;;MAElC;MACAG,SAAS,CAACJ,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE;;MAElC;MACAG,SAAS,CAACI,QAAQ,CAACC,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;MACpCP,SAAS,CAACI,QAAQ,CAACI,CAAC,GAAG,CAAC,CAAC,CAAE;;MAE3BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,EAAEC,SAAS,EAAGC,KAAK,IAAK;MACvBH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAG,IAAIhD,aAAa,CAACQ,MAAM,EAAEK,QAAQ,CAACU,UAAU,CAAC;IAC/DyB,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;IAC7BF,QAAQ,CAACG,kBAAkB,GAAG,KAAK;IACnCH,QAAQ,CAACI,aAAa,GAAGX,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;IACtCM,QAAQ,CAACK,UAAU,GAAG,IAAI;;IAE1B;IACA,IAAIC,YAAY,GAAG,CAAC;IAEpB,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBD,YAAY,GAAG5C,MAAM,CAAC8C,OAAO,GAAG9C,MAAM,CAACE,WAAW,CAAC,CAAE;IACvD,CAAC;IAEDF,MAAM,CAAC+C,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;;IAE/C;IACA,MAAMG,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;;MAE9B;MACA,MAAME,UAAU,GAAG,CAAC,GAAGN,YAAY,GAAG,EAAE,CAAC,CAAE;MAC3C9C,MAAM,CAACuB,QAAQ,CAAC8B,CAAC,GAAGD,UAAU;;MAE9B;MACA,IAAIzB,SAAS,EAAE;QACb;QACAA,SAAS,CAACI,QAAQ,CAACI,CAAC,IAAI,IAAI,GAAGW,YAAY,GAAG,IAAI,CAAC,CAAE;QACrDnB,SAAS,CAACJ,QAAQ,CAACS,CAAC,GAAGc,YAAY,GAAG,CAAC,CAAC,CAAE;QAC1CnB,SAAS,CAACJ,QAAQ,CAACY,CAAC,GAAG,CAACW,YAAY,GAAG,CAAC,CAAC,CAAE;MAC7C;;MAEA;MACAN,QAAQ,CAACc,MAAM,CAAC,CAAC;MAEjBjD,QAAQ,CAACkD,MAAM,CAACzD,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDkD,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXhD,MAAM,CAACsD,mBAAmB,CAAC,QAAQ,EAAET,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOrD,OAAA;IAAQ+D,GAAG,EAAE5D;EAAU;IAAA6D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAACjE,EAAA,CAnGID,WAAW;AAAAmE,EAAA,GAAXnE,WAAW;AAqGjB,eAAeA,WAAW;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}