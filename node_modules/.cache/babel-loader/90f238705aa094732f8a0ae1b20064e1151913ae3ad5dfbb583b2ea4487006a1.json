{"ast":null,"code":"var _jsxFileName = \"/Users/iitianaditya/nw/src/threejs/VideoPlane.js\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlane = () => {\n  _s();\n  const videoRef = useRef();\n  const planeRef = useRef();\n  useEffect(() => {\n    // Video element\n    const video = document.createElement('video');\n    video.src = '/assets/intro.mp4'; // Path to your video\n    video.crossOrigin = 'anonymous';\n    video.loop = false;\n    video.muted = true;\n    video.play();\n    videoRef.current = video;\n\n    // Video texture\n    const texture = new THREE.VideoTexture(video);\n\n    // Attach texture to material\n    if (planeRef.current) {\n      planeRef.current.material.map = texture;\n      planeRef.current.material.needsUpdate = true;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: planeRef,\n    position: [0, 0, -2],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [16, 9]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlane, \"tbAGtj/zl+A5I2ukYLxryDuPPx0=\");\n_c = VideoPlane;\nexport default VideoPlane;\nvar _c;\n$RefreshReg$(_c, \"VideoPlane\");","map":{"version":3,"names":["THREE","useEffect","useRef","jsxDEV","_jsxDEV","VideoPlane","_s","videoRef","planeRef","video","document","createElement","src","crossOrigin","loop","muted","play","current","texture","VideoTexture","material","map","needsUpdate","ref","position","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iitianaditya/nw/src/threejs/VideoPlane.js"],"sourcesContent":["import * as THREE from 'three';\nimport { useEffect, useRef } from 'react';\n\nconst VideoPlane = () => {\n  const videoRef = useRef();\n  const planeRef = useRef();\n\n  useEffect(() => {\n    // Video element\n    const video = document.createElement('video');\n    video.src = '/assets/intro.mp4'; // Path to your video\n    video.crossOrigin = 'anonymous';\n    video.loop = false;\n    video.muted = true;\n    video.play();\n    videoRef.current = video;\n\n    // Video texture\n    const texture = new THREE.VideoTexture(video);\n\n    // Attach texture to material\n    if (planeRef.current) {\n      planeRef.current.material.map = texture;\n      planeRef.current.material.needsUpdate = true;\n    }\n  }, []);\n\n  return (\n    <mesh ref={planeRef} position={[0, 0, -2]}>\n      <planeGeometry args={[16, 9]} />\n      <meshBasicMaterial />\n    </mesh>\n  );\n};\n\nexport default VideoPlane;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAAC;EACzB,MAAMM,QAAQ,GAAGN,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7CF,KAAK,CAACG,GAAG,GAAG,mBAAmB,CAAC,CAAC;IACjCH,KAAK,CAACI,WAAW,GAAG,WAAW;IAC/BJ,KAAK,CAACK,IAAI,GAAG,KAAK;IAClBL,KAAK,CAACM,KAAK,GAAG,IAAI;IAClBN,KAAK,CAACO,IAAI,CAAC,CAAC;IACZT,QAAQ,CAACU,OAAO,GAAGR,KAAK;;IAExB;IACA,MAAMS,OAAO,GAAG,IAAIlB,KAAK,CAACmB,YAAY,CAACV,KAAK,CAAC;;IAE7C;IACA,IAAID,QAAQ,CAACS,OAAO,EAAE;MACpBT,QAAQ,CAACS,OAAO,CAACG,QAAQ,CAACC,GAAG,GAAGH,OAAO;MACvCV,QAAQ,CAACS,OAAO,CAACG,QAAQ,CAACE,WAAW,GAAG,IAAI;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAMmB,GAAG,EAAEf,QAAS;IAACgB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;IAAAC,QAAA,gBACxCrB,OAAA;MAAesB,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChC1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEX,CAAC;AAACxB,EAAA,CA9BID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}